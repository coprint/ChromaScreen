# This file contains pin mappings for the 2019 Creality CR-10S Pro. To use
# this config, the firmware should be compiled for the AVR atmega2560.

# See the example.cfg file for a description of available parameters.
[include chroma_head.cfg]
[include driver.cfg]
[include bed_mesh.cfg]
[include input_shaper.cfg]
[include cp_macro.cfg]
#[include ecm_1.cfg]
#[include ecm_2.cfg]
#[include ecm_3.cfg]
#[include ecm_4.cfg]

[stepper_x]
step_pin: ar54
dir_pin: ar55
enable_pin: !ar38
step_distance: .0125
endstop_pin: ^ar3
position_endstop: 0
position_max: 300
homing_speed: 50

[stepper_y]
step_pin: ar60
dir_pin: !ar61
enable_pin: !ar56
step_distance: .0125
endstop_pin: ^ar14
position_endstop: 0
position_max: 300
homing_speed: 50

[stepper_z]
step_pin: ar46
dir_pin: !ar48
enable_pin: !ar62
step_distance: .0025
#endstop_pin: ^ar18
#position_endstop: 0.5
endstop_pin: probe: z_virtual_endstop
position_max: 400
position_min: -1.0

# [extruder]
# step_pin: ar26
# dir_pin: ar28
# enable_pin: !ar24
# step_distance: .007286
# nozzle_diameter: 0.400
# filament_diameter: 1.750
# heater_pin: ar10
# sensor_type: EPCOS 100K B57560G104F
# sensor_pin: analog13
# #control: pid
# #pid_Kp: 22.2
# #pid_Ki: 1.08
# #pid_Kd: 114
# min_temp: 0
# max_temp: 250

[heater_bed]
heater_pin: ar8
sensor_type: ATC Semitec 104GT-2
sensor_pin: analog14
#control: pid
#pid_Kp: 690.34
#pid_Ki: 111.47
#pid_Kd: 1068.83
min_temp: 0
max_temp: 130

# [fan]
# pin: ar9

[mcu]
serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_AK06VTXC-if00-port0
pin_map: arduino

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 3000
max_z_velocity: 10
max_z_accel: 100

#[display]
#lcd_type: st7920
#cs_pin: ar16
#sclk_pin: ar23
#sid_pin: ar17
#encoder_pins: ^ar33, ^ar31
#click_pin: ^!ar35

# Z height probe. One may define this section to enable Z height
# probing hardware. When this section is enabled, PROBE and
# QUERY_PROBE extended g-code commands become available. The probe
# section also creates a virtual "probe:z_virtual_endstop" pin. One
# may set the stepper_z endstop_pin to this virtual pin on cartesian
# style printers that use the probe in place of a z endstop. If using
# "probe:z_virtual_endstop" then do not define a position_endstop in
# the stepper_z config section.
# [probe]
# pin: ar18
# #   Probe detection pin. This parameter must be provided.
# x_offset: -50.0
# #   The distance (in mm) between the probe and the nozzle along the
# #   x-axis. The default is 0.
# y_offset: -9.0
#   The distance (in mm) between the probe and the nozzle along the
#   y-axis. The default is 0.
#z_offset: 1.5
#   The distance (in mm) between the bed and the nozzle when the probe
#   triggers. This parameter must be provided.
#speed: 5.0
#   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
#activate_gcode:
#   A list of G-Code commands (one per line; subsequent lines
#   indented) to execute prior to each probe attempt. This may be
#   useful if the probe needs to be activated in some way. Do not
#   issue any commands here that move the toolhead (eg, G1). The
#   default is to not run any special G-Code commands on activation.
#deactivate_gcode:
#   A list of G-Code commands (one per line; subsequent lines
#   indented) to execute after each probe attempt completes. Do not
#   issue any commands here that move the toolhead. The default is to
#   not run any special G-Code commands on deactivation.

# Mesh Bed Leveling. One may define a [bed_mesh] config section
# to enable move transformations that offset the z axis based
# on a mesh generated from probed points. Note that bed_mesh
# and bed_tilt are incompatible, both cannot be defined.  When
# using a probe to home the z-axis, it is recommended to define
# a [homing_override] section in printer.cfg to home toward the
# center of the print area.
#
#  Visual Examples:
#   rectangular bed, probe_count = 3,3:
#               x---x---x (max_point)
#               |
#               x---x---x
#                       |
#   (min_point) x---x---x
#
#   round bed, round_probe_count = 5, bed_radius = r:
#                  x (0,r) end
#                /
#              x---x---x
#                        \
#   (-r,0) x---x---x---x---x (r,0)
#            \
#              x---x---x
#                    /
#                  x  (0,-r) start
# #
# [bed_mesh]
# #speed: 50
# #   The speed (in mm/s) of non-probing moves during the
# #   calibration. The default is 50.
# #horizontal_move_z: 5
# #   The height (in mm) that the head should be commanded to move to
# #   just prior to starting a probe operation. The default is 5.
# #samples: 1
# #   The number of times to probe each point.  The probed z-values
# #   will be averaged.  The default is to probe 1 time.
# #samples_result: average
# #   One can choose median or average between probes samples
# #   The default is average.
# #sample_retract_dist: 2.0
# #   The distance (in mm) to retract between each sample if
# #   sampling more than once.  Default is 2mm.
# #bed_radius:
# #   Defines the radius to probe for round beds.  Note that the radius
# #   is relative to the nozzle's origin, if using a probe be sure to
# #   account for its offset.  This parameter must be provided for round
# #   beds and omitted for rectangular beds.
# min_point: 30,30
# #   Defines the minimum x,y position to probe when for rectangular
# #   beds. Note that this refers to the nozzle position, take care that
# #   you do not define a point that will move the probe off of the bed.
# #   This parameter must be provided for rectangular beds.
# max_point: 270,270
# #   Defines the maximum x,y position to probe when for rectangular
# #   beds. Follow the same precautions as listed in min_point. Also note
# #   that this does not necessarily define the last point probed, only
# #   the maximum coordinate. This parameter must be provided.
# probe_count: 4,4
# #   For rectangular beds, this is a comma separate pair of integer
# #   values (X,Y) defining the number of points to probe along each axis.
# #   A single value is also valid, in which case that value will be applied
# #   to both axes.  Default is 3,3.
# #round_probe_count: 5
# #   For round beds, this is integer value defines the maximum number of
# #   points to probe along each axis. This value must be an odd number.
# #   Default is 5.
# #fade_start: 1.0
# #   The gcode z position in which to start phasing out z-adjustment
# #   when fade is enabled.  Default is 1.0.
# #fade_end: 0.0
# #   The gcode z position in which phasing out completes.  When set
# #   to a value below fade_start, fade is disabled. It should be
# #   noted that fade may add unwanted scaling along the z-axis of a
# #   print.  If a user wishes to enable fade, a value of 10.0 is
# #   recommended. Default is 0.0, which disables fade.
# #fade_target:
# #   The z position in which fade should converge. When this value is set
# #   to a non-zero value it must be within the range of z-values in the mesh.
# #   Users that wish to converge to the z homing position should set this to 0.
# #   Default is the average z value of the mesh.
# #split_delta_z: .025
# #   The amount of Z difference (in mm) along a move that will
# #   trigger a split. Default is .025.
# #move_check_distance: 5.0
# #   The distance (in mm) along a move to check for split_delta_z.
# #   This is also the minimum length that a move can be split. Default
# #   is 5.0.
# #mesh_pps: 2,2
# #   A comma separated pair of integers (X,Y) defining the number of
# #   points per segment to interpolate in the mesh along each axis. A
# #   "segment" can be defined as the space between each probed
# #   point. The user may enter a single value which will be applied
# #   to both axes.  Default is 2,2.
# #algorithm: lagrange
# #   The interpolation algorithm to use. May be either "lagrange"
# #   or "bicubic". This option will not affect 3x3 grids, which
# #   are forced to use lagrange sampling.  Default is lagrange.
# #bicubic_tension: .2
# #   When using the bicubic algorithm the tension parameter above
# #   may be applied to change the amount of slope interpolated.
# #   Larger numbers will increase the amount of slope, which
# #   results in more curvature in the mesh. Default is .2.
# #relative_reference_index:
# #   A point index in the mesh to reference all z values to. Enabling
# #   this parameter produces a mesh relative to the probed z position
# #   at the provided index.

# # Heater cooling fans (one may define any number of sections with a
# # "heater_fan" prefix). A "heater fan" is a fan that will be enabled
# # whenever its associated heater is active. By default, a heater_fan
# # has a shutdown_speed equal to max_power.
# #[heater_fan nozzle_fan]
# #pin: ar9
# #max_power:
# #shutdown_speed:
# #cycle_time:
# #hardware_pwm:
# #kick_start_time:
# #   See the "fan" section in example.cfg for a description of the
# #   above parameters.
# #heater: extruder
# #   Name of the config section defining the heater that this fan is
# #   associated with. If a comma separated list of heater names is
# #   provided here, then the fan will be enabled when any of the given
# #   heaters are enabled. The default is "extruder".
# #heater_temp: 50.0
# #   A temperature (in Celsius) that the heater must drop below before
# #   the fan is disabled. The default is 50 Celsius.
# #fan_speed: 1.0
# #   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
# #   will be set to when its associated heater is enabled. The default
# #   is 1.0

# [homing_override]
# set_position_z: 0
# axes: z
# gcode:
#     ; G90   ; Uncomment these 2 lines to blindly lift the Z 2mm at start
#     ; G1 Z2 F600
#     G28 X0 Y0
#     G1 X100 Y100 F3600
#     G28 Z0

# [gcode_macro G29]
# gcode:
#     G28
#     G1 Z10 F600
#     BED_MESH_CALIBRATE


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 5